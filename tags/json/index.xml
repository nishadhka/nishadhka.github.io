<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Json on Nishadh KA</title>
    <link>//localhost:1313/tags/json/</link>
    <description>Recent content in Json on Nishadh KA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 May 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="//localhost:1313/tags/json/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>python_querying_and_editing_json</title>
      <link>//localhost:1313/working-notes/2014/wn_2014-05/python_querying_and_editing_json/</link>
      <pubDate>Wed, 28 May 2014 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/working-notes/2014/wn_2014-05/python_querying_and_editing_json/</guid>
      <description>##pythonqueryingandeditingjson## - For most of the works related with this and this involves editing and querying of json and its formates such as GeoJson and Topojson - In cbe-air web application, topjson is going to act as map element and its editing is required for real time map generation and for map styling - In node.js based web application for visualizing model output, netcdf output from WRF has to converted into geojson and made similar with the earth wind data formate.</description>
    </item>
    
    <item>
      <title>json data into SQLinsert with python</title>
      <link>//localhost:1313/working-notes/2014/wn_2014-05/json_data_into_sqlinsert_with_python/</link>
      <pubDate>Fri, 23 May 2014 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/working-notes/2014/wn_2014-05/json_data_into_sqlinsert_with_python/</guid>
      <description>##jsondataintoSQLinsertwith python## - to start with json data in python and loop over its elements
import json json_data=open(&#39;data.json&#39;) data=json.load(json_data) a=data[0][&#39;samples&#39;] for rs in a: print rs[&#39;wind&#39;]   to join two list as a column in python  to join two list inpython for c1, c2 in zip(de, c): print &amp;quot;%-9s %s&amp;quot; % (c1, c2)  to append loop items into a array  c=[] for rs in a: c.append(rs[&#39;wind&#39;])  to remove u from list elemnt  de=[] for x in d: de.</description>
    </item>
    
    <item>
      <title>converting WRF ouput netcdf into json</title>
      <link>//localhost:1313/working-notes/2014/wn_2014-05/converting_wrf_ouput_netcdf_into_json/</link>
      <pubDate>Mon, 19 May 2014 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/working-notes/2014/wn_2014-05/converting_wrf_ouput_netcdf_into_json/</guid>
      <description>##convertingWRFouputnetcdfinto_json## - tried with grib2json for converting netcdf into json 1 - for this netcdf has to converted into grib2 - for converting into grib2, python based iris is useful 2, but only work with cf compliant netcdf - WRF output in netcdf is not a cf compliant - So has to use a tool which convert WRF netcdf into CF compliant - Wrfncxnj.py tool 3 exactly do this with more functions such as extraction of variables etc - Wrfncxnj.</description>
    </item>
    
    <item>
      <title>Store json data into Mysql using python</title>
      <link>//localhost:1313/working-notes/2013/wn_2013-10/store-json-data-into-mysql-using-python/</link>
      <pubDate>Mon, 28 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/working-notes/2013/wn_2013-10/store-json-data-into-mysql-using-python/</guid>
      <description>Web services APIs such as weather underground data provided in json format is stored in Mysql table using this python script.
Based on stack overflow answers http://stackoverflow.com/questions/1640715/get-json-data-via-url-and-use-in-python-simplejson http://stackoverflow.com/questions/5687718/python-mysql-insert-data
import urllib2 import json import MySQLdb
req = urllib2.Request(&amp;ldquo;http://api.wunderground.com/api/YOUR API key/conditions/q/country/town.json&amp;rdquo;) opener = urllib2.buildopener() f = opener.open(req) data = json.load(f) print data[&amp;lsquo;current_observation&amp;rsquo;][&amp;lsquo;observation_location&amp;rsquo;][&amp;lsquo;city&amp;rsquo;],data[&amp;lsquo;currentobservation&amp;rsquo;][&amp;lsquo;observationtimerfc822&amp;rsquo;]
conn = MySQLdb.connect(host= &amp;ldquo;localhost&amp;rdquo;, user=&amp;ldquo;YOUR username&amp;rdquo;, passwd=&amp;ldquo;YOUR password&amp;rdquo;, db=&amp;ldquo;database&amp;rdquo;) x = conn.cursor()
try: x.execute( &amp;ldquo;INSERT INTO CBEmeterology (Station, DateAP)&amp;rdquo; &amp;ldquo;VALUES (%s,%s)&amp;rdquo;,(data[&amp;lsquo;current_observation&amp;rsquo;][&amp;lsquo;observation_location&amp;rsquo;][&amp;lsquo;city&amp;rsquo;],data[&amp;lsquo;currentobservation&amp;rsquo;][&amp;lsquo;observationtimerfc822&amp;rsquo;])) conn.</description>
    </item>
    
  </channel>
</rss>